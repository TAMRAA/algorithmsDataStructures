#include <stdio.h>
#include <stdlib.h>
#define N 9


// Function Prototype
int partition(int a[], int l, int h);
void quickSort(int a[],int l, int h);
void swap(int *a, int *b);
// Main function
int main (void){
    int array[N] = {6,5,8,9,3,10,15,12,16};
    int i;
    
    quickSort(array,0,N-1);
    for(i=0;i<N-1;i++){
        fprintf(stdout,"%d ",array[i]);
    }

    return (EXIT_SUCCESS);
}

// Quick Sort

int partition(int a[], int l, int h){
    int pivot, i, j;

    pivot = a[l];
    i = l;
    j = h;

    while (i < j){
        do{
            i++;
        } while (a[i]<=pivot);

        do{
            j--;
        } while (a[j]>pivot);

        if(i<j){
            swap(&a[i],&a[j]);
        }
    }
    swap(&a[l],&a[j]);
    return j;
}

void quickSort(int a[],int l, int h){
    int j;
    if(l < h){
        j = partition(a,l,h);
        quickSort(a,l,j);
        quickSort(a,j+1,h);
    }
}

void swap(int *a, int *b){
    int tmp;
    tmp = *a;
    *a = *b;
    *b = tmp;
}

