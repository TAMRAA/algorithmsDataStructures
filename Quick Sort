#include <stdio.h>
#include <stdlib.h>
#define N 9


// Function Prototype
void quickSort(int a[],int l, int h);
int partition(int a[],int l, int h);
void swap(int *a, int *b);

// Main function
int main (void){
    int a[N] = {6,5,8,9,3,10,15,12,16};
    int i;
    int low = 0;
    int high = N-1;
    quickSort(a,low,high);
    for(i=0;i<N-1;i++){
        fprintf(stdout,"%d ", a[i]);
    }
    return (EXIT_SUCCESS);
}

// Quick Sort

int partition(int a[], int l, int h){
    int i, j;
    int pivot;

    pivot = a[l];
    i = l;
    j = h;
    while (i < j){
        do{
            i++;
        } while (a[i] <= pivot);

        do{
            j--;
        } while (a[j] > pivot);

        if(i<j){
            swap(&a[i],&a[j]);
        }
    }
    swap(&a[l], &a[j]);
    return j;
}

void quickSort(int a[],int l, int h){
    int j;
    if(l<h){
        j = partition(a,l,h);
        quickSort(a,l,j);
        quickSort(a,j+1,h);
    }
}
void swap(int *a, int *b){
    int tmp;
    tmp = *a;
    *a = *b;
    *b = tmp;
}

