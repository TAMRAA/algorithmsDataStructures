// insertion sort

void InsertionSort(int A[], int N) {
  int i, j, x;
  for (i = 1; i <= N-1; i++) {
     x = A[i];
     j = i - 1;
     while (j >= 0 && x < A[j]){
       A[j+1] = A[j];
        j--; 
    }
    
    A[j+1] = x; 
    
    }
}

// selection sort

void SelectionSort(int A[], int N) {
    int i, j, min;
    int temp;
    for (i = 0; i < N-1 ; i++) {
        min = i;
        for (j = i+1; j <= N-1; j++)
            if (A[j] < A[min])
                min = j;
        if (min != i) {
            temp = A[i];
            A[i] = A[min];
            A[min] = temp; } }
    return; 
}

// bubble sort 

void bubble_sort(int a[], int n){
    int i , j , r = n-1;
    int tmp;
    for(i=0 ;i<r; i++){
        for(j=0;j<r-i;j++){
            if(a[j+1]<a[j]){
                tmp = a[j];
                a[j] = a[j+1];
                a[j+1] = tmp;
            }
        }
    }
}
