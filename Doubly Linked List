#include <stdio.h>
#include <stdlib.h>

typedef struct node{
    struct node *prev;
    int data;
    struct node *next;
}node;

// function prototypes
struct node* add_to_empty(struct node *head, int value);
struct node* add_beg(struct node *head, int data);


// main function
int main(void){
    int value1, value2, value3;
    int i = 1;
    struct node *head = NULL;
    struct node *ptr;
    fprintf(stdout,"introduce value of the first node:\n");
    scanf("%d", &value1);
    fprintf(stdout,"introduce value of the node to replace the first node:\n");
    scanf("%d", &value2);
    head = add_to_empty(head,value1);
    head = add_beg(head,value2);

    ptr = head;
    while (ptr!=NULL){
        fprintf(stdout,"data(%d): %d\n", i, ptr->data);
        ptr = ptr->next;
        i++;
    }

    return (EXIT_SUCCESS);

}
struct node* add_to_empty(struct node *head, int value) {
    struct node *ptr = (struct node *) malloc(sizeof(node));
    if (ptr == NULL) {
        fprintf(stdout, "memory allocation failed");
        exit(EXIT_FAILURE);
    }
    ptr->prev = NULL;
    ptr->data = value;
    ptr->next = NULL;

    head = ptr;
    return head;

}

struct node* add_beg(struct node *head, int data){
    struct node *ptr = (struct node *) malloc(sizeof (node));

    ptr->prev = NULL;
    ptr->data = data;
    ptr->next = NULL;

    ptr->next = head;
    head->prev = ptr;
    head = ptr;

    return head;
}
