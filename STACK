#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 10

#define SUCCESS 1
#define FAILURE 0

typedef struct node{
    int data;
    struct node *link;
}node;

// Function Prototypes
node *push(struct node *Top, int data);
node *pop(struct node *Top,int *status, int *data);
node *traversal(struct node *pTop);
void read (int *value);
void write(int status, int value);



int main(void){
    node *Top;
    int value, status;
    char choice[MAX];

    Top = NULL;

    do{
        fprintf(stdout,"Push (p) Pop (o) Traversal (t) End(e):\n");
        scanf("%s", choice);

        if(strcmp(choice,"p")==0){

            read(&value);
            Top = push(Top,value);
            Top = traversal(Top);

        }else if(strcmp(choice,"o")==0){

            Top = pop(Top, &status,&value);
            write(status,value);
            Top = traversal(Top);

        }else{
            if(strcmp(choice,"t")==0){
                Top = traversal(Top);
            }else{
                if(strcmp(choice,"e")!=0){
                    fprintf(stdout,"Wrong Input\n");
                }
            }
        }

    } while (strcmp(choice,"e")!=0);

    return (EXIT_SUCCESS);
}

node *push(struct node *Top, int data){
    node *ptr = (node *) malloc(sizeof (node));
    if(ptr==NULL){
        fprintf(stdout,"memory allocation failed\n");
        exit(EXIT_FAILURE);
    }
    ptr->data = data;
    ptr->link = Top;

    Top = ptr;

    return (Top);

}

node *pop(struct node *Top,int *status, int *data) {
    node *ptr;
    if (Top != NULL) {
        ptr = Top;
        *status = SUCCESS;
        *data = ptr->data;
        Top = Top->link;
        free(ptr);
    } else {
        *status = FAILURE;
    }
    return (Top);
}

node *traversal(struct node *Top){
    node *ptr = Top;
    fprintf(stdout,"Top -> ");
    while (ptr!=NULL){
        fprintf(stdout,"%d ->",ptr->data);
        ptr = ptr->link;
    }
    fprintf(stdout," NULL\n");
    return (Top);
}

void read (int *value){
    fprintf(stdout,"Insert a value:\n");
    scanf("%d", value);

    return;
}

void write(int status, int value){

    if(status==SUCCESS){
        fprintf(stdout,"Element %d is popped successfully\n",value);
    }else{
        fprintf(stdout,"Stack is empty\n");
    }
}
